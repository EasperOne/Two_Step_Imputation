// nextflow.config

// Define pipeline parameters with default values
params {
    // Input/Output Options
    outdir = "${baseDir}/../Two_Step_Imputation_Results"
    cohorts_csv = "${baseDir}/Cohorts_Info.csv"

    // Reference Files
    fasta = '/path/to/human_g1k_v37.fasta'
    gmap = '/path/to/genetic_map_hg19.txt.gz'

    // Tool Paths (only used if not using conda/docker)
    bcftools = 'bcftools'
    tabix = 'tabix'
    minimac4 = 'minimac4'
    eagle = 'eagle' 
    vcftools = 'vcftools'
    perl = 'perl'
    rscript = 'Rscript'

    // Script Paths (Relative to the pipeline launch directory or absolute)
    align_script = "${baseDir}/Alignment.sh"
    vcf_bcf_script = "${baseDir}/VCF_BCF.sh"
    phase_script = "${baseDir}/phase.sh"
    convert_refp_script = "${baseDir}/convert_RefP.sh"
    minimac4_script = "${baseDir}/minimac4.sh"
    r_input_script = "${baseDir}/R_Input.sh"
    r_command_script = "${baseDir}/R_Command.sh"
    vcf_filter_script = "${baseDir}/VCF_Filter_Vcftools.sh"
    merge_vcf_script = "${baseDir}/Merge_VCF_BCFtools.sh"
    extract_info_pl = "${baseDir}/extract_info_VCF.pl"
    snp_select_r = "${baseDir}/SNP_Selection.R"

    // Pipeline Specific Parameters (from original config.sh)
    cpus = 12
    rounds = 5
    
    // IMPORTANT: This parameter is not needed as reference panels are created internally 
    // from the phased cohort data during the pipeline run
    // Only needed if you want to use external reference panels instead of cross-imputation
    ref_panel_m3vcf = null // Set to null as we're generating reference panels internally
}

// Define Process specific configurations
process {
    // Default cpus and memory
    cpus = { params.cpus }
    memory = '10.GB'

    // Error strategy
    errorStrategy = 'finish'

    withName: 'ALIGNMENT|VCF_TO_BCF|MERGE_VCF' {
        conda = "bioconda::bcftools=1.14 bioconda::htslib=1.14"
    }

    withName: 'PHASE' {
        conda = "bioconda::eagle=2.4.1"
    }

    withName: 'IMPUTE|CONVERT_REFP' {
        conda = "bioconda::minimac4=4.1.4"
    }

    withName: 'FILTER_VCF' {
        conda = "bioconda::vcftools=0.1.17"
    }

    withName: 'PREPARE_R_INPUT|RUN_R_SELECT' {
        conda = "r-base=4.1.0 bioconda::perl=5.26.2"
    }
}

// Enable conda
conda {
    enabled = true
    cacheDir = "${baseDir}/conda"
    createTimeout = "60 min"
}

// Define Executor
executor {
    name = 'local'
    cpus = params.cpus
}

// Enable pipeline reporting options
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/timeline.html"
}
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/report.html"
}
trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/trace.txt"
    fields = 'task_id,name,status,exit,duration,realtime,%cpu,%mem,rss,vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes'
}

// Manifest information
manifest {
    name = 'Two-Step-Imputation-nf'
    description = 'Nextflow implementation of the Two-Step Imputation pipeline'
    author = 'Your Name'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.10.3'
    version = '1.0.0'
} 